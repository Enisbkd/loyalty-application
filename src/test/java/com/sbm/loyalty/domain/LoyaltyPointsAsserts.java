package com.sbm.loyalty.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LoyaltyPointsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyPointsAllPropertiesEquals(LoyaltyPoints expected, LoyaltyPoints actual) {
        assertLoyaltyPointsAutoGeneratedPropertiesEquals(expected, actual);
        assertLoyaltyPointsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyPointsAllUpdatablePropertiesEquals(LoyaltyPoints expected, LoyaltyPoints actual) {
        assertLoyaltyPointsUpdatableFieldsEquals(expected, actual);
        assertLoyaltyPointsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyPointsAutoGeneratedPropertiesEquals(LoyaltyPoints expected, LoyaltyPoints actual) {
        assertThat(expected)
            .as("Verify LoyaltyPoints auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyPointsUpdatableFieldsEquals(LoyaltyPoints expected, LoyaltyPoints actual) {
        assertThat(expected)
            .as("Verify LoyaltyPoints relevant properties")
            .satisfies(e -> assertThat(e.getStatusPoints()).as("check statusPoints").isEqualTo(actual.getStatusPoints()))
            .satisfies(e -> assertThat(e.getMyPoints()).as("check myPoints").isEqualTo(actual.getMyPoints()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyPointsUpdatableRelationshipsEquals(LoyaltyPoints expected, LoyaltyPoints actual) {
        assertThat(expected)
            .as("Verify LoyaltyPoints relationships")
            .satisfies(e ->
                assertThat(e.getRiskEpurationPoints()).as("check riskEpurationPoints").isEqualTo(actual.getRiskEpurationPoints())
            );
    }
}
